/*
 * This file is generated by jOOQ.
 */
package nl.gamedata.data;


import nl.gamedata.data.tables.DashboardSetting;
import nl.gamedata.data.tables.Game;
import nl.gamedata.data.tables.GameMission;
import nl.gamedata.data.tables.GameRole;
import nl.gamedata.data.tables.GameSession;
import nl.gamedata.data.tables.GameVersion;
import nl.gamedata.data.tables.Group;
import nl.gamedata.data.tables.GroupAction;
import nl.gamedata.data.tables.GroupEvent;
import nl.gamedata.data.tables.GroupObjective;
import nl.gamedata.data.tables.GroupRole;
import nl.gamedata.data.tables.GroupScore;
import nl.gamedata.data.tables.MissionAction;
import nl.gamedata.data.tables.MissionEvent;
import nl.gamedata.data.tables.Organization;
import nl.gamedata.data.tables.OrganizationToken;
import nl.gamedata.data.tables.Player;
import nl.gamedata.data.tables.PlayerAction;
import nl.gamedata.data.tables.PlayerAttempt;
import nl.gamedata.data.tables.PlayerEvent;
import nl.gamedata.data.tables.PlayerObjective;
import nl.gamedata.data.tables.PlayerScore;
import nl.gamedata.data.tables.Scale;
import nl.gamedata.data.tables.SessionRole;
import nl.gamedata.data.tables.User;
import nl.gamedata.data.tables.records.DashboardSettingRecord;
import nl.gamedata.data.tables.records.GameMissionRecord;
import nl.gamedata.data.tables.records.GameRecord;
import nl.gamedata.data.tables.records.GameRoleRecord;
import nl.gamedata.data.tables.records.GameSessionRecord;
import nl.gamedata.data.tables.records.GameVersionRecord;
import nl.gamedata.data.tables.records.GroupActionRecord;
import nl.gamedata.data.tables.records.GroupEventRecord;
import nl.gamedata.data.tables.records.GroupObjectiveRecord;
import nl.gamedata.data.tables.records.GroupRecord;
import nl.gamedata.data.tables.records.GroupRoleRecord;
import nl.gamedata.data.tables.records.GroupScoreRecord;
import nl.gamedata.data.tables.records.MissionActionRecord;
import nl.gamedata.data.tables.records.MissionEventRecord;
import nl.gamedata.data.tables.records.OrganizationRecord;
import nl.gamedata.data.tables.records.OrganizationTokenRecord;
import nl.gamedata.data.tables.records.PlayerActionRecord;
import nl.gamedata.data.tables.records.PlayerAttemptRecord;
import nl.gamedata.data.tables.records.PlayerEventRecord;
import nl.gamedata.data.tables.records.PlayerObjectiveRecord;
import nl.gamedata.data.tables.records.PlayerRecord;
import nl.gamedata.data.tables.records.PlayerScoreRecord;
import nl.gamedata.data.tables.records.ScaleRecord;
import nl.gamedata.data.tables.records.SessionRoleRecord;
import nl.gamedata.data.tables.records.UserRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * gamedata.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<DashboardSettingRecord> KEY_DASHBOARD_SETTING_ID_UNIQUE = Internal.createUniqueKey(DashboardSetting.DASHBOARD_SETTING, DSL.name("KEY_dashboard_setting_id_UNIQUE"), new TableField[] { DashboardSetting.DASHBOARD_SETTING.ID }, true);
    public static final UniqueKey<DashboardSettingRecord> KEY_DASHBOARD_SETTING_PRIMARY = Internal.createUniqueKey(DashboardSetting.DASHBOARD_SETTING, DSL.name("KEY_dashboard_setting_PRIMARY"), new TableField[] { DashboardSetting.DASHBOARD_SETTING.ID }, true);
    public static final UniqueKey<GameRecord> KEY_GAME_ID_UNIQUE = Internal.createUniqueKey(Game.GAME, DSL.name("KEY_game_id_UNIQUE"), new TableField[] { Game.GAME.ID }, true);
    public static final UniqueKey<GameRecord> KEY_GAME_NAME_UNIQUE = Internal.createUniqueKey(Game.GAME, DSL.name("KEY_game_name_UNIQUE"), new TableField[] { Game.GAME.NAME }, true);
    public static final UniqueKey<GameRecord> KEY_GAME_PRIMARY = Internal.createUniqueKey(Game.GAME, DSL.name("KEY_game_PRIMARY"), new TableField[] { Game.GAME.ID }, true);
    public static final UniqueKey<GameMissionRecord> KEY_GAME_MISSION_ID_UNIQUE = Internal.createUniqueKey(GameMission.GAME_MISSION, DSL.name("KEY_game_mission_id_UNIQUE"), new TableField[] { GameMission.GAME_MISSION.ID }, true);
    public static final UniqueKey<GameMissionRecord> KEY_GAME_MISSION_PRIMARY = Internal.createUniqueKey(GameMission.GAME_MISSION, DSL.name("KEY_game_mission_PRIMARY"), new TableField[] { GameMission.GAME_MISSION.ID }, true);
    public static final UniqueKey<GameRoleRecord> KEY_GAME_ROLE_ID_UNIQUE = Internal.createUniqueKey(GameRole.GAME_ROLE, DSL.name("KEY_game_role_id_UNIQUE"), new TableField[] { GameRole.GAME_ROLE.ID }, true);
    public static final UniqueKey<GameRoleRecord> KEY_GAME_ROLE_PRIMARY = Internal.createUniqueKey(GameRole.GAME_ROLE, DSL.name("KEY_game_role_PRIMARY"), new TableField[] { GameRole.GAME_ROLE.ID }, true);
    public static final UniqueKey<GameSessionRecord> KEY_GAME_SESSION_ID_UNIQUE = Internal.createUniqueKey(GameSession.GAME_SESSION, DSL.name("KEY_game_session_id_UNIQUE"), new TableField[] { GameSession.GAME_SESSION.ID }, true);
    public static final UniqueKey<GameSessionRecord> KEY_GAME_SESSION_PRIMARY = Internal.createUniqueKey(GameSession.GAME_SESSION, DSL.name("KEY_game_session_PRIMARY"), new TableField[] { GameSession.GAME_SESSION.ID }, true);
    public static final UniqueKey<GameVersionRecord> KEY_GAME_VERSION_ID_UNIQUE = Internal.createUniqueKey(GameVersion.GAME_VERSION, DSL.name("KEY_game_version_id_UNIQUE"), new TableField[] { GameVersion.GAME_VERSION.ID }, true);
    public static final UniqueKey<GameVersionRecord> KEY_GAME_VERSION_PRIMARY = Internal.createUniqueKey(GameVersion.GAME_VERSION, DSL.name("KEY_game_version_PRIMARY"), new TableField[] { GameVersion.GAME_VERSION.ID }, true);
    public static final UniqueKey<GroupRecord> KEY_GROUP_ID_UNIQUE = Internal.createUniqueKey(Group.GROUP, DSL.name("KEY_group_id_UNIQUE"), new TableField[] { Group.GROUP.ID }, true);
    public static final UniqueKey<GroupRecord> KEY_GROUP_PRIMARY = Internal.createUniqueKey(Group.GROUP, DSL.name("KEY_group_PRIMARY"), new TableField[] { Group.GROUP.ID }, true);
    public static final UniqueKey<GroupActionRecord> KEY_GROUP_ACTION_ID_UNIQUE = Internal.createUniqueKey(GroupAction.GROUP_ACTION, DSL.name("KEY_group_action_id_UNIQUE"), new TableField[] { GroupAction.GROUP_ACTION.ID }, true);
    public static final UniqueKey<GroupActionRecord> KEY_GROUP_ACTION_PRIMARY = Internal.createUniqueKey(GroupAction.GROUP_ACTION, DSL.name("KEY_group_action_PRIMARY"), new TableField[] { GroupAction.GROUP_ACTION.ID }, true);
    public static final UniqueKey<GroupEventRecord> KEY_GROUP_EVENT_ID_UNIQUE = Internal.createUniqueKey(GroupEvent.GROUP_EVENT, DSL.name("KEY_group_event_id_UNIQUE"), new TableField[] { GroupEvent.GROUP_EVENT.ID }, true);
    public static final UniqueKey<GroupEventRecord> KEY_GROUP_EVENT_PRIMARY = Internal.createUniqueKey(GroupEvent.GROUP_EVENT, DSL.name("KEY_group_event_PRIMARY"), new TableField[] { GroupEvent.GROUP_EVENT.ID }, true);
    public static final UniqueKey<GroupObjectiveRecord> KEY_GROUP_OBJECTIVE_ID_UNIQUE = Internal.createUniqueKey(GroupObjective.GROUP_OBJECTIVE, DSL.name("KEY_group_objective_id_UNIQUE"), new TableField[] { GroupObjective.GROUP_OBJECTIVE.ID }, true);
    public static final UniqueKey<GroupObjectiveRecord> KEY_GROUP_OBJECTIVE_PRIMARY = Internal.createUniqueKey(GroupObjective.GROUP_OBJECTIVE, DSL.name("KEY_group_objective_PRIMARY"), new TableField[] { GroupObjective.GROUP_OBJECTIVE.ID }, true);
    public static final UniqueKey<GroupRoleRecord> KEY_GROUP_ROLE_ID_UNIQUE = Internal.createUniqueKey(GroupRole.GROUP_ROLE, DSL.name("KEY_group_role_id_UNIQUE"), new TableField[] { GroupRole.GROUP_ROLE.ID }, true);
    public static final UniqueKey<GroupRoleRecord> KEY_GROUP_ROLE_PRIMARY = Internal.createUniqueKey(GroupRole.GROUP_ROLE, DSL.name("KEY_group_role_PRIMARY"), new TableField[] { GroupRole.GROUP_ROLE.ID }, true);
    public static final UniqueKey<GroupScoreRecord> KEY_GROUP_SCORE_ID_UNIQUE = Internal.createUniqueKey(GroupScore.GROUP_SCORE, DSL.name("KEY_group_score_id_UNIQUE"), new TableField[] { GroupScore.GROUP_SCORE.ID }, true);
    public static final UniqueKey<GroupScoreRecord> KEY_GROUP_SCORE_PRIMARY = Internal.createUniqueKey(GroupScore.GROUP_SCORE, DSL.name("KEY_group_score_PRIMARY"), new TableField[] { GroupScore.GROUP_SCORE.ID }, true);
    public static final UniqueKey<MissionActionRecord> KEY_MISSION_ACTION_ID_UNIQUE = Internal.createUniqueKey(MissionAction.MISSION_ACTION, DSL.name("KEY_mission_action_id_UNIQUE"), new TableField[] { MissionAction.MISSION_ACTION.ID }, true);
    public static final UniqueKey<MissionActionRecord> KEY_MISSION_ACTION_PRIMARY = Internal.createUniqueKey(MissionAction.MISSION_ACTION, DSL.name("KEY_mission_action_PRIMARY"), new TableField[] { MissionAction.MISSION_ACTION.ID }, true);
    public static final UniqueKey<MissionEventRecord> KEY_MISSION_EVENT_ID_UNIQUE = Internal.createUniqueKey(MissionEvent.MISSION_EVENT, DSL.name("KEY_mission_event_id_UNIQUE"), new TableField[] { MissionEvent.MISSION_EVENT.ID }, true);
    public static final UniqueKey<MissionEventRecord> KEY_MISSION_EVENT_PRIMARY = Internal.createUniqueKey(MissionEvent.MISSION_EVENT, DSL.name("KEY_mission_event_PRIMARY"), new TableField[] { MissionEvent.MISSION_EVENT.ID }, true);
    public static final UniqueKey<OrganizationRecord> KEY_ORGANIZATION_CODE_UNIQUE = Internal.createUniqueKey(Organization.ORGANIZATION, DSL.name("KEY_organization_code_UNIQUE"), new TableField[] { Organization.ORGANIZATION.CODE }, true);
    public static final UniqueKey<OrganizationRecord> KEY_ORGANIZATION_ID_UNIQUE = Internal.createUniqueKey(Organization.ORGANIZATION, DSL.name("KEY_organization_id_UNIQUE"), new TableField[] { Organization.ORGANIZATION.ID }, true);
    public static final UniqueKey<OrganizationRecord> KEY_ORGANIZATION_PRIMARY = Internal.createUniqueKey(Organization.ORGANIZATION, DSL.name("KEY_organization_PRIMARY"), new TableField[] { Organization.ORGANIZATION.ID }, true);
    public static final UniqueKey<OrganizationTokenRecord> KEY_ORGANIZATION_TOKEN_ID_UNIQUE = Internal.createUniqueKey(OrganizationToken.ORGANIZATION_TOKEN, DSL.name("KEY_organization_token_id_UNIQUE"), new TableField[] { OrganizationToken.ORGANIZATION_TOKEN.ID }, true);
    public static final UniqueKey<OrganizationTokenRecord> KEY_ORGANIZATION_TOKEN_PRIMARY = Internal.createUniqueKey(OrganizationToken.ORGANIZATION_TOKEN, DSL.name("KEY_organization_token_PRIMARY"), new TableField[] { OrganizationToken.ORGANIZATION_TOKEN.ID }, true);
    public static final UniqueKey<PlayerRecord> KEY_PLAYER_ID_UNIQUE = Internal.createUniqueKey(Player.PLAYER, DSL.name("KEY_player_id_UNIQUE"), new TableField[] { Player.PLAYER.ID }, true);
    public static final UniqueKey<PlayerRecord> KEY_PLAYER_PRIMARY = Internal.createUniqueKey(Player.PLAYER, DSL.name("KEY_player_PRIMARY"), new TableField[] { Player.PLAYER.ID }, true);
    public static final UniqueKey<PlayerActionRecord> KEY_PLAYER_ACTION_ID_UNIQUE = Internal.createUniqueKey(PlayerAction.PLAYER_ACTION, DSL.name("KEY_player_action_id_UNIQUE"), new TableField[] { PlayerAction.PLAYER_ACTION.ID }, true);
    public static final UniqueKey<PlayerActionRecord> KEY_PLAYER_ACTION_PRIMARY = Internal.createUniqueKey(PlayerAction.PLAYER_ACTION, DSL.name("KEY_player_action_PRIMARY"), new TableField[] { PlayerAction.PLAYER_ACTION.ID }, true);
    public static final UniqueKey<PlayerAttemptRecord> KEY_PLAYER_ATTEMPT_ID_UNIQUE = Internal.createUniqueKey(PlayerAttempt.PLAYER_ATTEMPT, DSL.name("KEY_player_attempt_id_UNIQUE"), new TableField[] { PlayerAttempt.PLAYER_ATTEMPT.ID }, true);
    public static final UniqueKey<PlayerAttemptRecord> KEY_PLAYER_ATTEMPT_PRIMARY = Internal.createUniqueKey(PlayerAttempt.PLAYER_ATTEMPT, DSL.name("KEY_player_attempt_PRIMARY"), new TableField[] { PlayerAttempt.PLAYER_ATTEMPT.ID }, true);
    public static final UniqueKey<PlayerEventRecord> KEY_PLAYER_EVENT_ID_UNIQUE = Internal.createUniqueKey(PlayerEvent.PLAYER_EVENT, DSL.name("KEY_player_event_id_UNIQUE"), new TableField[] { PlayerEvent.PLAYER_EVENT.ID }, true);
    public static final UniqueKey<PlayerEventRecord> KEY_PLAYER_EVENT_PRIMARY = Internal.createUniqueKey(PlayerEvent.PLAYER_EVENT, DSL.name("KEY_player_event_PRIMARY"), new TableField[] { PlayerEvent.PLAYER_EVENT.ID }, true);
    public static final UniqueKey<PlayerObjectiveRecord> KEY_PLAYER_OBJECTIVE_ID_UNIQUE = Internal.createUniqueKey(PlayerObjective.PLAYER_OBJECTIVE, DSL.name("KEY_player_objective_id_UNIQUE"), new TableField[] { PlayerObjective.PLAYER_OBJECTIVE.ID }, true);
    public static final UniqueKey<PlayerObjectiveRecord> KEY_PLAYER_OBJECTIVE_PRIMARY = Internal.createUniqueKey(PlayerObjective.PLAYER_OBJECTIVE, DSL.name("KEY_player_objective_PRIMARY"), new TableField[] { PlayerObjective.PLAYER_OBJECTIVE.ID }, true);
    public static final UniqueKey<PlayerScoreRecord> KEY_PLAYER_SCORE_ID_UNIQUE = Internal.createUniqueKey(PlayerScore.PLAYER_SCORE, DSL.name("KEY_player_score_id_UNIQUE"), new TableField[] { PlayerScore.PLAYER_SCORE.ID }, true);
    public static final UniqueKey<PlayerScoreRecord> KEY_PLAYER_SCORE_PRIMARY = Internal.createUniqueKey(PlayerScore.PLAYER_SCORE, DSL.name("KEY_player_score_PRIMARY"), new TableField[] { PlayerScore.PLAYER_SCORE.ID }, true);
    public static final UniqueKey<ScaleRecord> KEY_SCALE_ID_UNIQUE = Internal.createUniqueKey(Scale.SCALE, DSL.name("KEY_scale_id_UNIQUE"), new TableField[] { Scale.SCALE.ID }, true);
    public static final UniqueKey<ScaleRecord> KEY_SCALE_PRIMARY = Internal.createUniqueKey(Scale.SCALE, DSL.name("KEY_scale_PRIMARY"), new TableField[] { Scale.SCALE.ID }, true);
    public static final UniqueKey<SessionRoleRecord> KEY_SESSION_ROLE_ID_UNIQUE = Internal.createUniqueKey(SessionRole.SESSION_ROLE, DSL.name("KEY_session_role_id_UNIQUE"), new TableField[] { SessionRole.SESSION_ROLE.ID }, true);
    public static final UniqueKey<SessionRoleRecord> KEY_SESSION_ROLE_PRIMARY = Internal.createUniqueKey(SessionRole.SESSION_ROLE, DSL.name("KEY_session_role_PRIMARY"), new TableField[] { SessionRole.SESSION_ROLE.ID }, true);
    public static final UniqueKey<UserRecord> KEY_USER_ID_UNIQUE = Internal.createUniqueKey(User.USER, DSL.name("KEY_user_id_UNIQUE"), new TableField[] { User.USER.ID }, true);
    public static final UniqueKey<UserRecord> KEY_USER_NAME_UNIQUE = Internal.createUniqueKey(User.USER, DSL.name("KEY_user_name_UNIQUE"), new TableField[] { User.USER.NAME }, true);
    public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = Internal.createUniqueKey(User.USER, DSL.name("KEY_user_PRIMARY"), new TableField[] { User.USER.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<DashboardSettingRecord, GameRecord> FK_DASHBOARD_GAME1 = Internal.createForeignKey(DashboardSetting.DASHBOARD_SETTING, DSL.name("fk_dashboard_game1"), new TableField[] { DashboardSetting.DASHBOARD_SETTING.GAME_ID }, Keys.KEY_GAME_PRIMARY, new TableField[] { Game.GAME.ID }, true);
    public static final ForeignKey<GameMissionRecord, GameVersionRecord> FK_GAME_MISSION_GAME_VERSION1 = Internal.createForeignKey(GameMission.GAME_MISSION, DSL.name("fk_game_mission_game_version1"), new TableField[] { GameMission.GAME_MISSION.GAME_VERSION_ID }, Keys.KEY_GAME_VERSION_PRIMARY, new TableField[] { GameVersion.GAME_VERSION.ID }, true);
    public static final ForeignKey<GameRoleRecord, GameRecord> FK_USERROLE_GAME1 = Internal.createForeignKey(GameRole.GAME_ROLE, DSL.name("fk_userrole_game1"), new TableField[] { GameRole.GAME_ROLE.GAME_ID }, Keys.KEY_GAME_PRIMARY, new TableField[] { Game.GAME.ID }, true);
    public static final ForeignKey<GameRoleRecord, UserRecord> FK_USERROLE_USER = Internal.createForeignKey(GameRole.GAME_ROLE, DSL.name("fk_userrole_user"), new TableField[] { GameRole.GAME_ROLE.USER_ID }, Keys.KEY_USER_PRIMARY, new TableField[] { User.USER.ID }, true);
    public static final ForeignKey<GameSessionRecord, GameVersionRecord> FK_GAME_SESSION_GAME_VERSION1 = Internal.createForeignKey(GameSession.GAME_SESSION, DSL.name("fk_game_session_game_version1"), new TableField[] { GameSession.GAME_SESSION.GAME_VERSION_ID }, Keys.KEY_GAME_VERSION_PRIMARY, new TableField[] { GameVersion.GAME_VERSION.ID }, true);
    public static final ForeignKey<GameSessionRecord, OrganizationRecord> FK_GAME_SESSION_ORGANIZATION1 = Internal.createForeignKey(GameSession.GAME_SESSION, DSL.name("fk_game_session_organization1"), new TableField[] { GameSession.GAME_SESSION.ORGANIZATION_ID }, Keys.KEY_ORGANIZATION_PRIMARY, new TableField[] { Organization.ORGANIZATION.ID }, true);
    public static final ForeignKey<GameVersionRecord, GameRecord> FK_GAME_VERSION_GAME1 = Internal.createForeignKey(GameVersion.GAME_VERSION, DSL.name("fk_game_version_game1"), new TableField[] { GameVersion.GAME_VERSION.GAME_ID }, Keys.KEY_GAME_PRIMARY, new TableField[] { Game.GAME.ID }, true);
    public static final ForeignKey<GroupRecord, GameSessionRecord> FK_GROUP_GAME_SESSION1 = Internal.createForeignKey(Group.GROUP, DSL.name("fk_group_game_session1"), new TableField[] { Group.GROUP.GAME_SESSION_ID }, Keys.KEY_GAME_SESSION_PRIMARY, new TableField[] { GameSession.GAME_SESSION.ID }, true);
    public static final ForeignKey<GroupActionRecord, GroupRecord> FK_GROUPLOGDATA_GROUP1 = Internal.createForeignKey(GroupAction.GROUP_ACTION, DSL.name("fk_grouplogdata_group1"), new TableField[] { GroupAction.GROUP_ACTION.GROUP_ID }, Keys.KEY_GROUP_PRIMARY, new TableField[] { Group.GROUP.ID }, true);
    public static final ForeignKey<GroupEventRecord, GroupRecord> FK_GROUPEVENT_GROUP1 = Internal.createForeignKey(GroupEvent.GROUP_EVENT, DSL.name("fk_groupevent_group1"), new TableField[] { GroupEvent.GROUP_EVENT.GROUP_ID }, Keys.KEY_GROUP_PRIMARY, new TableField[] { Group.GROUP.ID }, true);
    public static final ForeignKey<GroupObjectiveRecord, GameMissionRecord> FK_GROUP_OBJECTIVE_GAME_MISSION1 = Internal.createForeignKey(GroupObjective.GROUP_OBJECTIVE, DSL.name("fk_group_objective_game_mission1"), new TableField[] { GroupObjective.GROUP_OBJECTIVE.GAME_MISSION_ID }, Keys.KEY_GAME_MISSION_PRIMARY, new TableField[] { GameMission.GAME_MISSION.ID }, true);
    public static final ForeignKey<GroupObjectiveRecord, ScaleRecord> FK_GROUP_OBJECTIVE_SCALE1 = Internal.createForeignKey(GroupObjective.GROUP_OBJECTIVE, DSL.name("fk_group_objective_scale1"), new TableField[] { GroupObjective.GROUP_OBJECTIVE.SCALE_ID }, Keys.KEY_SCALE_PRIMARY, new TableField[] { Scale.SCALE.ID }, true);
    public static final ForeignKey<GroupRoleRecord, GroupRecord> FK_GROUP_ROLE_GROUP1 = Internal.createForeignKey(GroupRole.GROUP_ROLE, DSL.name("fk_group_role_group1"), new TableField[] { GroupRole.GROUP_ROLE.GROUP_ID }, Keys.KEY_GROUP_PRIMARY, new TableField[] { Group.GROUP.ID }, true);
    public static final ForeignKey<GroupScoreRecord, GroupObjectiveRecord> FK_GROUP_SCORE_GROUP_OBJECTIVE1 = Internal.createForeignKey(GroupScore.GROUP_SCORE, DSL.name("fk_group_score_group_objective1"), new TableField[] { GroupScore.GROUP_SCORE.GROUP_OBJECTIVE_ID }, Keys.KEY_GROUP_OBJECTIVE_PRIMARY, new TableField[] { GroupObjective.GROUP_OBJECTIVE.ID }, true);
    public static final ForeignKey<GroupScoreRecord, GroupRecord> FK_GROUPSCORE_GROUP1 = Internal.createForeignKey(GroupScore.GROUP_SCORE, DSL.name("fk_groupscore_group1"), new TableField[] { GroupScore.GROUP_SCORE.GROUP_ID }, Keys.KEY_GROUP_PRIMARY, new TableField[] { Group.GROUP.ID }, true);
    public static final ForeignKey<MissionActionRecord, GameMissionRecord> FK_SESSIONLOGDATA_GAMESESSION1 = Internal.createForeignKey(MissionAction.MISSION_ACTION, DSL.name("fk_sessionlogdata_gamesession1"), new TableField[] { MissionAction.MISSION_ACTION.GAMESESSION_ID }, Keys.KEY_GAME_MISSION_PRIMARY, new TableField[] { GameMission.GAME_MISSION.ID }, true);
    public static final ForeignKey<MissionEventRecord, GameMissionRecord> FK_SESSIONEVENT_GAMESESSION1 = Internal.createForeignKey(MissionEvent.MISSION_EVENT, DSL.name("fk_sessionevent_gamesession1"), new TableField[] { MissionEvent.MISSION_EVENT.GAMESESSION_ID }, Keys.KEY_GAME_MISSION_PRIMARY, new TableField[] { GameMission.GAME_MISSION.ID }, true);
    public static final ForeignKey<OrganizationTokenRecord, GameRecord> FK_TOKEN_GAME1 = Internal.createForeignKey(OrganizationToken.ORGANIZATION_TOKEN, DSL.name("fk_token_game1"), new TableField[] { OrganizationToken.ORGANIZATION_TOKEN.GAME_ID }, Keys.KEY_GAME_PRIMARY, new TableField[] { Game.GAME.ID }, true);
    public static final ForeignKey<OrganizationTokenRecord, OrganizationRecord> FK_TOKEN_ORGANIZATION1 = Internal.createForeignKey(OrganizationToken.ORGANIZATION_TOKEN, DSL.name("fk_token_organization1"), new TableField[] { OrganizationToken.ORGANIZATION_TOKEN.ORGANIZATION_ID }, Keys.KEY_ORGANIZATION_PRIMARY, new TableField[] { Organization.ORGANIZATION.ID }, true);
    public static final ForeignKey<PlayerRecord, GameSessionRecord> FK_PLAYER_GAME_SESSION1 = Internal.createForeignKey(Player.PLAYER, DSL.name("fk_player_game_session1"), new TableField[] { Player.PLAYER.GAME_SESSION_ID }, Keys.KEY_GAME_SESSION_PRIMARY, new TableField[] { GameSession.GAME_SESSION.ID }, true);
    public static final ForeignKey<PlayerRecord, GroupRoleRecord> FK_PLAYER_GROUP_ROLE1 = Internal.createForeignKey(Player.PLAYER, DSL.name("fk_player_group_role1"), new TableField[] { Player.PLAYER.GROUP_ROLE_ID }, Keys.KEY_GROUP_ROLE_PRIMARY, new TableField[] { GroupRole.GROUP_ROLE.ID }, true);
    public static final ForeignKey<PlayerActionRecord, PlayerAttemptRecord> FK_PLAYER_LOGDATA_PLAYER_ATTEMPT1 = Internal.createForeignKey(PlayerAction.PLAYER_ACTION, DSL.name("fk_player_logdata_player_attempt1"), new TableField[] { PlayerAction.PLAYER_ACTION.PLAYER_ATTEMPT_ID }, Keys.KEY_PLAYER_ATTEMPT_PRIMARY, new TableField[] { PlayerAttempt.PLAYER_ATTEMPT.ID }, true);
    public static final ForeignKey<PlayerAttemptRecord, GameMissionRecord> FK_PLAYER_ATTEMPT_GAME_MISSION1 = Internal.createForeignKey(PlayerAttempt.PLAYER_ATTEMPT, DSL.name("fk_player_attempt_game_mission1"), new TableField[] { PlayerAttempt.PLAYER_ATTEMPT.GAME_MISSION_ID }, Keys.KEY_GAME_MISSION_PRIMARY, new TableField[] { GameMission.GAME_MISSION.ID }, true);
    public static final ForeignKey<PlayerAttemptRecord, GameSessionRecord> FK_PLAYER_ATTEMPT_GAME_SESSION1 = Internal.createForeignKey(PlayerAttempt.PLAYER_ATTEMPT, DSL.name("fk_player_attempt_game_session1"), new TableField[] { PlayerAttempt.PLAYER_ATTEMPT.GAME_SESSION_ID }, Keys.KEY_GAME_SESSION_PRIMARY, new TableField[] { GameSession.GAME_SESSION.ID }, true);
    public static final ForeignKey<PlayerAttemptRecord, PlayerRecord> FK_PLAYER_ATTEMPT_PLAYER1 = Internal.createForeignKey(PlayerAttempt.PLAYER_ATTEMPT, DSL.name("fk_player_attempt_player1"), new TableField[] { PlayerAttempt.PLAYER_ATTEMPT.PLAYER_ID }, Keys.KEY_PLAYER_PRIMARY, new TableField[] { Player.PLAYER.ID }, true);
    public static final ForeignKey<PlayerEventRecord, PlayerAttemptRecord> FK_PLAYER_EVENT_PLAYER_ATTEMPT1 = Internal.createForeignKey(PlayerEvent.PLAYER_EVENT, DSL.name("fk_player_event_player_attempt1"), new TableField[] { PlayerEvent.PLAYER_EVENT.PLAYER_ATTEMPT_ID }, Keys.KEY_PLAYER_ATTEMPT_PRIMARY, new TableField[] { PlayerAttempt.PLAYER_ATTEMPT.ID }, true);
    public static final ForeignKey<PlayerObjectiveRecord, GameMissionRecord> FK_PLAYER_OBJECTIVE_GAME_MISSION1 = Internal.createForeignKey(PlayerObjective.PLAYER_OBJECTIVE, DSL.name("fk_player_objective_game_mission1"), new TableField[] { PlayerObjective.PLAYER_OBJECTIVE.GAME_MISSION_ID }, Keys.KEY_GAME_MISSION_PRIMARY, new TableField[] { GameMission.GAME_MISSION.ID }, true);
    public static final ForeignKey<PlayerObjectiveRecord, ScaleRecord> FK_PLAYER_OBJECTIVE_SCALE1 = Internal.createForeignKey(PlayerObjective.PLAYER_OBJECTIVE, DSL.name("fk_player_objective_scale1"), new TableField[] { PlayerObjective.PLAYER_OBJECTIVE.SCALE_ID }, Keys.KEY_SCALE_PRIMARY, new TableField[] { Scale.SCALE.ID }, true);
    public static final ForeignKey<PlayerScoreRecord, PlayerAttemptRecord> FK_PLAYER_SCORE_PLAYER_ATTEMPT1 = Internal.createForeignKey(PlayerScore.PLAYER_SCORE, DSL.name("fk_player_score_player_attempt1"), new TableField[] { PlayerScore.PLAYER_SCORE.PLAYER_ATTEMPT_ID }, Keys.KEY_PLAYER_ATTEMPT_PRIMARY, new TableField[] { PlayerAttempt.PLAYER_ATTEMPT.ID }, true);
    public static final ForeignKey<PlayerScoreRecord, PlayerObjectiveRecord> FK_PLAYER_SCORE_PLAYER_OBJECTIVE1 = Internal.createForeignKey(PlayerScore.PLAYER_SCORE, DSL.name("fk_player_score_player_objective1"), new TableField[] { PlayerScore.PLAYER_SCORE.PLAYER_OBJECTIVE_ID }, Keys.KEY_PLAYER_OBJECTIVE_PRIMARY, new TableField[] { PlayerObjective.PLAYER_OBJECTIVE.ID }, true);
    public static final ForeignKey<SessionRoleRecord, GameSessionRecord> FK_SESSION_ROLE_GAME_SESSION1 = Internal.createForeignKey(SessionRole.SESSION_ROLE, DSL.name("fk_session_role_game_session1"), new TableField[] { SessionRole.SESSION_ROLE.GAME_SESSION_ID }, Keys.KEY_GAME_SESSION_PRIMARY, new TableField[] { GameSession.GAME_SESSION.ID }, true);
    public static final ForeignKey<SessionRoleRecord, OrganizationRecord> FK_SESSION_ROLE_ORGANIZATION1 = Internal.createForeignKey(SessionRole.SESSION_ROLE, DSL.name("fk_session_role_organization1"), new TableField[] { SessionRole.SESSION_ROLE.ORGANIZATION_ID }, Keys.KEY_ORGANIZATION_PRIMARY, new TableField[] { Organization.ORGANIZATION.ID }, true);
    public static final ForeignKey<UserRecord, OrganizationRecord> FK_USER_ORGANIZATION1 = Internal.createForeignKey(User.USER, DSL.name("fk_user_organization1"), new TableField[] { User.USER.ORGANIZATION_ID }, Keys.KEY_ORGANIZATION_PRIMARY, new TableField[] { Organization.ORGANIZATION.ID }, true);
}

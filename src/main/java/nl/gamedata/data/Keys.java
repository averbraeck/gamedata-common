/*
 * This file is generated by jOOQ.
 */
package nl.gamedata.data;


import nl.gamedata.data.tables.DashboardSetting;
import nl.gamedata.data.tables.Game;
import nl.gamedata.data.tables.GameMission;
import nl.gamedata.data.tables.GameRole;
import nl.gamedata.data.tables.GameSession;
import nl.gamedata.data.tables.Group;
import nl.gamedata.data.tables.GroupEvent;
import nl.gamedata.data.tables.GroupLogdata;
import nl.gamedata.data.tables.GroupScore;
import nl.gamedata.data.tables.MissionEvent;
import nl.gamedata.data.tables.MissionLogdata;
import nl.gamedata.data.tables.Organization;
import nl.gamedata.data.tables.Player;
import nl.gamedata.data.tables.PlayerEvent;
import nl.gamedata.data.tables.PlayerLogdata;
import nl.gamedata.data.tables.PlayerScore;
import nl.gamedata.data.tables.Role;
import nl.gamedata.data.tables.SessionRole;
import nl.gamedata.data.tables.User;
import nl.gamedata.data.tables.records.DashboardSettingRecord;
import nl.gamedata.data.tables.records.GameMissionRecord;
import nl.gamedata.data.tables.records.GameRecord;
import nl.gamedata.data.tables.records.GameRoleRecord;
import nl.gamedata.data.tables.records.GameSessionRecord;
import nl.gamedata.data.tables.records.GroupEventRecord;
import nl.gamedata.data.tables.records.GroupLogdataRecord;
import nl.gamedata.data.tables.records.GroupRecord;
import nl.gamedata.data.tables.records.GroupScoreRecord;
import nl.gamedata.data.tables.records.MissionEventRecord;
import nl.gamedata.data.tables.records.MissionLogdataRecord;
import nl.gamedata.data.tables.records.OrganizationRecord;
import nl.gamedata.data.tables.records.PlayerEventRecord;
import nl.gamedata.data.tables.records.PlayerLogdataRecord;
import nl.gamedata.data.tables.records.PlayerRecord;
import nl.gamedata.data.tables.records.PlayerScoreRecord;
import nl.gamedata.data.tables.records.RoleRecord;
import nl.gamedata.data.tables.records.SessionRoleRecord;
import nl.gamedata.data.tables.records.UserRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * gamedata.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<DashboardSettingRecord> KEY_DASHBOARD_SETTING_ID_UNIQUE = Internal.createUniqueKey(DashboardSetting.DASHBOARD_SETTING, DSL.name("KEY_dashboard_setting_id_UNIQUE"), new TableField[] { DashboardSetting.DASHBOARD_SETTING.ID }, true);
    public static final UniqueKey<DashboardSettingRecord> KEY_DASHBOARD_SETTING_PRIMARY = Internal.createUniqueKey(DashboardSetting.DASHBOARD_SETTING, DSL.name("KEY_dashboard_setting_PRIMARY"), new TableField[] { DashboardSetting.DASHBOARD_SETTING.ID }, true);
    public static final UniqueKey<GameRecord> KEY_GAME_ID_UNIQUE = Internal.createUniqueKey(Game.GAME, DSL.name("KEY_game_id_UNIQUE"), new TableField[] { Game.GAME.ID }, true);
    public static final UniqueKey<GameRecord> KEY_GAME_PRIMARY = Internal.createUniqueKey(Game.GAME, DSL.name("KEY_game_PRIMARY"), new TableField[] { Game.GAME.ID }, true);
    public static final UniqueKey<GameMissionRecord> KEY_GAME_MISSION_ID_UNIQUE = Internal.createUniqueKey(GameMission.GAME_MISSION, DSL.name("KEY_game_mission_id_UNIQUE"), new TableField[] { GameMission.GAME_MISSION.ID }, true);
    public static final UniqueKey<GameMissionRecord> KEY_GAME_MISSION_PRIMARY = Internal.createUniqueKey(GameMission.GAME_MISSION, DSL.name("KEY_game_mission_PRIMARY"), new TableField[] { GameMission.GAME_MISSION.ID }, true);
    public static final UniqueKey<GameRoleRecord> KEY_GAME_ROLE_ID_UNIQUE = Internal.createUniqueKey(GameRole.GAME_ROLE, DSL.name("KEY_game_role_id_UNIQUE"), new TableField[] { GameRole.GAME_ROLE.ID }, true);
    public static final UniqueKey<GameRoleRecord> KEY_GAME_ROLE_PRIMARY = Internal.createUniqueKey(GameRole.GAME_ROLE, DSL.name("KEY_game_role_PRIMARY"), new TableField[] { GameRole.GAME_ROLE.ID }, true);
    public static final UniqueKey<GameSessionRecord> KEY_GAME_SESSION_ID_UNIQUE = Internal.createUniqueKey(GameSession.GAME_SESSION, DSL.name("KEY_game_session_id_UNIQUE"), new TableField[] { GameSession.GAME_SESSION.ID }, true);
    public static final UniqueKey<GameSessionRecord> KEY_GAME_SESSION_PRIMARY = Internal.createUniqueKey(GameSession.GAME_SESSION, DSL.name("KEY_game_session_PRIMARY"), new TableField[] { GameSession.GAME_SESSION.ID }, true);
    public static final UniqueKey<GroupRecord> KEY_GROUP_ID_UNIQUE = Internal.createUniqueKey(Group.GROUP, DSL.name("KEY_group_id_UNIQUE"), new TableField[] { Group.GROUP.ID }, true);
    public static final UniqueKey<GroupRecord> KEY_GROUP_PRIMARY = Internal.createUniqueKey(Group.GROUP, DSL.name("KEY_group_PRIMARY"), new TableField[] { Group.GROUP.ID }, true);
    public static final UniqueKey<GroupEventRecord> KEY_GROUP_EVENT_ID_UNIQUE = Internal.createUniqueKey(GroupEvent.GROUP_EVENT, DSL.name("KEY_group_event_id_UNIQUE"), new TableField[] { GroupEvent.GROUP_EVENT.ID }, true);
    public static final UniqueKey<GroupEventRecord> KEY_GROUP_EVENT_PRIMARY = Internal.createUniqueKey(GroupEvent.GROUP_EVENT, DSL.name("KEY_group_event_PRIMARY"), new TableField[] { GroupEvent.GROUP_EVENT.ID }, true);
    public static final UniqueKey<GroupLogdataRecord> KEY_GROUP_LOGDATA_ID_UNIQUE = Internal.createUniqueKey(GroupLogdata.GROUP_LOGDATA, DSL.name("KEY_group_logdata_id_UNIQUE"), new TableField[] { GroupLogdata.GROUP_LOGDATA.ID }, true);
    public static final UniqueKey<GroupLogdataRecord> KEY_GROUP_LOGDATA_PRIMARY = Internal.createUniqueKey(GroupLogdata.GROUP_LOGDATA, DSL.name("KEY_group_logdata_PRIMARY"), new TableField[] { GroupLogdata.GROUP_LOGDATA.ID }, true);
    public static final UniqueKey<GroupScoreRecord> KEY_GROUP_SCORE_ID_UNIQUE = Internal.createUniqueKey(GroupScore.GROUP_SCORE, DSL.name("KEY_group_score_id_UNIQUE"), new TableField[] { GroupScore.GROUP_SCORE.ID }, true);
    public static final UniqueKey<GroupScoreRecord> KEY_GROUP_SCORE_PRIMARY = Internal.createUniqueKey(GroupScore.GROUP_SCORE, DSL.name("KEY_group_score_PRIMARY"), new TableField[] { GroupScore.GROUP_SCORE.ID }, true);
    public static final UniqueKey<MissionEventRecord> KEY_MISSION_EVENT_ID_UNIQUE = Internal.createUniqueKey(MissionEvent.MISSION_EVENT, DSL.name("KEY_mission_event_id_UNIQUE"), new TableField[] { MissionEvent.MISSION_EVENT.ID }, true);
    public static final UniqueKey<MissionEventRecord> KEY_MISSION_EVENT_PRIMARY = Internal.createUniqueKey(MissionEvent.MISSION_EVENT, DSL.name("KEY_mission_event_PRIMARY"), new TableField[] { MissionEvent.MISSION_EVENT.ID }, true);
    public static final UniqueKey<MissionLogdataRecord> KEY_MISSION_LOGDATA_ID_UNIQUE = Internal.createUniqueKey(MissionLogdata.MISSION_LOGDATA, DSL.name("KEY_mission_logdata_id_UNIQUE"), new TableField[] { MissionLogdata.MISSION_LOGDATA.ID }, true);
    public static final UniqueKey<MissionLogdataRecord> KEY_MISSION_LOGDATA_PRIMARY = Internal.createUniqueKey(MissionLogdata.MISSION_LOGDATA, DSL.name("KEY_mission_logdata_PRIMARY"), new TableField[] { MissionLogdata.MISSION_LOGDATA.ID }, true);
    public static final UniqueKey<OrganizationRecord> KEY_ORGANIZATION_ID_UNIQUE = Internal.createUniqueKey(Organization.ORGANIZATION, DSL.name("KEY_organization_id_UNIQUE"), new TableField[] { Organization.ORGANIZATION.ID }, true);
    public static final UniqueKey<OrganizationRecord> KEY_ORGANIZATION_PRIMARY = Internal.createUniqueKey(Organization.ORGANIZATION, DSL.name("KEY_organization_PRIMARY"), new TableField[] { Organization.ORGANIZATION.ID }, true);
    public static final UniqueKey<PlayerRecord> KEY_PLAYER_ID_UNIQUE = Internal.createUniqueKey(Player.PLAYER, DSL.name("KEY_player_id_UNIQUE"), new TableField[] { Player.PLAYER.ID }, true);
    public static final UniqueKey<PlayerRecord> KEY_PLAYER_PRIMARY = Internal.createUniqueKey(Player.PLAYER, DSL.name("KEY_player_PRIMARY"), new TableField[] { Player.PLAYER.ID }, true);
    public static final UniqueKey<PlayerEventRecord> KEY_PLAYER_EVENT_ID_UNIQUE = Internal.createUniqueKey(PlayerEvent.PLAYER_EVENT, DSL.name("KEY_player_event_id_UNIQUE"), new TableField[] { PlayerEvent.PLAYER_EVENT.ID }, true);
    public static final UniqueKey<PlayerEventRecord> KEY_PLAYER_EVENT_PRIMARY = Internal.createUniqueKey(PlayerEvent.PLAYER_EVENT, DSL.name("KEY_player_event_PRIMARY"), new TableField[] { PlayerEvent.PLAYER_EVENT.ID }, true);
    public static final UniqueKey<PlayerLogdataRecord> KEY_PLAYER_LOGDATA_ID_UNIQUE = Internal.createUniqueKey(PlayerLogdata.PLAYER_LOGDATA, DSL.name("KEY_player_logdata_id_UNIQUE"), new TableField[] { PlayerLogdata.PLAYER_LOGDATA.ID }, true);
    public static final UniqueKey<PlayerLogdataRecord> KEY_PLAYER_LOGDATA_PRIMARY = Internal.createUniqueKey(PlayerLogdata.PLAYER_LOGDATA, DSL.name("KEY_player_logdata_PRIMARY"), new TableField[] { PlayerLogdata.PLAYER_LOGDATA.ID }, true);
    public static final UniqueKey<PlayerScoreRecord> KEY_PLAYER_SCORE_ID_UNIQUE = Internal.createUniqueKey(PlayerScore.PLAYER_SCORE, DSL.name("KEY_player_score_id_UNIQUE"), new TableField[] { PlayerScore.PLAYER_SCORE.ID }, true);
    public static final UniqueKey<PlayerScoreRecord> KEY_PLAYER_SCORE_PRIMARY = Internal.createUniqueKey(PlayerScore.PLAYER_SCORE, DSL.name("KEY_player_score_PRIMARY"), new TableField[] { PlayerScore.PLAYER_SCORE.ID }, true);
    public static final UniqueKey<RoleRecord> KEY_ROLE_ID_UNIQUE = Internal.createUniqueKey(Role.ROLE, DSL.name("KEY_role_id_UNIQUE"), new TableField[] { Role.ROLE.ID }, true);
    public static final UniqueKey<RoleRecord> KEY_ROLE_PRIMARY = Internal.createUniqueKey(Role.ROLE, DSL.name("KEY_role_PRIMARY"), new TableField[] { Role.ROLE.ID }, true);
    public static final UniqueKey<SessionRoleRecord> KEY_SESSION_ROLE_ID_UNIQUE = Internal.createUniqueKey(SessionRole.SESSION_ROLE, DSL.name("KEY_session_role_id_UNIQUE"), new TableField[] { SessionRole.SESSION_ROLE.ID }, true);
    public static final UniqueKey<SessionRoleRecord> KEY_SESSION_ROLE_PRIMARY = Internal.createUniqueKey(SessionRole.SESSION_ROLE, DSL.name("KEY_session_role_PRIMARY"), new TableField[] { SessionRole.SESSION_ROLE.ID }, true);
    public static final UniqueKey<UserRecord> KEY_USER_ID_UNIQUE = Internal.createUniqueKey(User.USER, DSL.name("KEY_user_id_UNIQUE"), new TableField[] { User.USER.ID }, true);
    public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = Internal.createUniqueKey(User.USER, DSL.name("KEY_user_PRIMARY"), new TableField[] { User.USER.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<DashboardSettingRecord, GameRecord> FK_DASHBOARD_GAME1 = Internal.createForeignKey(DashboardSetting.DASHBOARD_SETTING, DSL.name("fk_dashboard_game1"), new TableField[] { DashboardSetting.DASHBOARD_SETTING.GAME_ID }, Keys.KEY_GAME_PRIMARY, new TableField[] { Game.GAME.ID }, true);
    public static final ForeignKey<GameMissionRecord, GameSessionRecord> FK_GAMESESSION_GAMEVERSION1 = Internal.createForeignKey(GameMission.GAME_MISSION, DSL.name("fk_gamesession_gameversion1"), new TableField[] { GameMission.GAME_MISSION.GAMEVERSION_ID }, Keys.KEY_GAME_SESSION_PRIMARY, new TableField[] { GameSession.GAME_SESSION.ID }, true);
    public static final ForeignKey<GameRoleRecord, GameRecord> FK_USERROLE_GAME1 = Internal.createForeignKey(GameRole.GAME_ROLE, DSL.name("fk_userrole_game1"), new TableField[] { GameRole.GAME_ROLE.GAME_ID }, Keys.KEY_GAME_PRIMARY, new TableField[] { Game.GAME.ID }, true);
    public static final ForeignKey<GameRoleRecord, RoleRecord> FK_USERROLE_ROLE1 = Internal.createForeignKey(GameRole.GAME_ROLE, DSL.name("fk_userrole_role1"), new TableField[] { GameRole.GAME_ROLE.ROLE_ID }, Keys.KEY_ROLE_PRIMARY, new TableField[] { Role.ROLE.ID }, true);
    public static final ForeignKey<GameRoleRecord, UserRecord> FK_USERROLE_USER = Internal.createForeignKey(GameRole.GAME_ROLE, DSL.name("fk_userrole_user"), new TableField[] { GameRole.GAME_ROLE.USER_ID }, Keys.KEY_USER_PRIMARY, new TableField[] { User.USER.ID }, true);
    public static final ForeignKey<GameSessionRecord, GameRecord> FK_GAMEVERSION_GAME1 = Internal.createForeignKey(GameSession.GAME_SESSION, DSL.name("fk_gameversion_game1"), new TableField[] { GameSession.GAME_SESSION.GAME_ID }, Keys.KEY_GAME_PRIMARY, new TableField[] { Game.GAME.ID }, true);
    public static final ForeignKey<GroupRecord, GameMissionRecord> FK_GAMEGROUP_GAMESESSION1 = Internal.createForeignKey(Group.GROUP, DSL.name("fk_gamegroup_gamesession1"), new TableField[] { Group.GROUP.GAMESESSION_ID }, Keys.KEY_GAME_MISSION_PRIMARY, new TableField[] { GameMission.GAME_MISSION.ID }, true);
    public static final ForeignKey<GroupEventRecord, GroupRecord> FK_GROUPEVENT_GROUP1 = Internal.createForeignKey(GroupEvent.GROUP_EVENT, DSL.name("fk_groupevent_group1"), new TableField[] { GroupEvent.GROUP_EVENT.GROUP_ID }, Keys.KEY_GROUP_PRIMARY, new TableField[] { Group.GROUP.ID }, true);
    public static final ForeignKey<GroupLogdataRecord, GroupRecord> FK_GROUPLOGDATA_GROUP1 = Internal.createForeignKey(GroupLogdata.GROUP_LOGDATA, DSL.name("fk_grouplogdata_group1"), new TableField[] { GroupLogdata.GROUP_LOGDATA.GROUP_ID }, Keys.KEY_GROUP_PRIMARY, new TableField[] { Group.GROUP.ID }, true);
    public static final ForeignKey<GroupScoreRecord, GroupRecord> FK_GROUPSCORE_GROUP1 = Internal.createForeignKey(GroupScore.GROUP_SCORE, DSL.name("fk_groupscore_group1"), new TableField[] { GroupScore.GROUP_SCORE.GROUP_ID }, Keys.KEY_GROUP_PRIMARY, new TableField[] { Group.GROUP.ID }, true);
    public static final ForeignKey<MissionEventRecord, GameMissionRecord> FK_SESSIONEVENT_GAMESESSION1 = Internal.createForeignKey(MissionEvent.MISSION_EVENT, DSL.name("fk_sessionevent_gamesession1"), new TableField[] { MissionEvent.MISSION_EVENT.GAMESESSION_ID }, Keys.KEY_GAME_MISSION_PRIMARY, new TableField[] { GameMission.GAME_MISSION.ID }, true);
    public static final ForeignKey<MissionLogdataRecord, GameMissionRecord> FK_SESSIONLOGDATA_GAMESESSION1 = Internal.createForeignKey(MissionLogdata.MISSION_LOGDATA, DSL.name("fk_sessionlogdata_gamesession1"), new TableField[] { MissionLogdata.MISSION_LOGDATA.GAMESESSION_ID }, Keys.KEY_GAME_MISSION_PRIMARY, new TableField[] { GameMission.GAME_MISSION.ID }, true);
    public static final ForeignKey<PlayerRecord, GroupRecord> FK_GAMEUSER_GAMEGROUP1 = Internal.createForeignKey(Player.PLAYER, DSL.name("fk_gameuser_gamegroup1"), new TableField[] { Player.PLAYER.GAMEGROUP_ID }, Keys.KEY_GROUP_PRIMARY, new TableField[] { Group.GROUP.ID }, true);
    public static final ForeignKey<PlayerRecord, GameMissionRecord> FK_GAMEUSER_GAMESESSION1 = Internal.createForeignKey(Player.PLAYER, DSL.name("fk_gameuser_gamesession1"), new TableField[] { Player.PLAYER.GAMESESSION_ID }, Keys.KEY_GAME_MISSION_PRIMARY, new TableField[] { GameMission.GAME_MISSION.ID }, true);
    public static final ForeignKey<PlayerEventRecord, PlayerRecord> FK_PLAYEREVENT_PLAYER1 = Internal.createForeignKey(PlayerEvent.PLAYER_EVENT, DSL.name("fk_playerevent_player1"), new TableField[] { PlayerEvent.PLAYER_EVENT.PLAYER_ID }, Keys.KEY_PLAYER_PRIMARY, new TableField[] { Player.PLAYER.ID }, true);
    public static final ForeignKey<PlayerLogdataRecord, PlayerRecord> FK_PLAYERLOGDATA_PLAYER1 = Internal.createForeignKey(PlayerLogdata.PLAYER_LOGDATA, DSL.name("fk_playerlogdata_player1"), new TableField[] { PlayerLogdata.PLAYER_LOGDATA.PLAYER_ID }, Keys.KEY_PLAYER_PRIMARY, new TableField[] { Player.PLAYER.ID }, true);
    public static final ForeignKey<PlayerScoreRecord, PlayerRecord> FK_PLAYERSCORE_PLAYER1 = Internal.createForeignKey(PlayerScore.PLAYER_SCORE, DSL.name("fk_playerscore_player1"), new TableField[] { PlayerScore.PLAYER_SCORE.PLAYER_ID }, Keys.KEY_PLAYER_PRIMARY, new TableField[] { Player.PLAYER.ID }, true);
    public static final ForeignKey<SessionRoleRecord, GameSessionRecord> FK_SESSION_ROLE_GAME_SESSION1 = Internal.createForeignKey(SessionRole.SESSION_ROLE, DSL.name("fk_session_role_game_session1"), new TableField[] { SessionRole.SESSION_ROLE.GAME_SESSION_ID }, Keys.KEY_GAME_SESSION_PRIMARY, new TableField[] { GameSession.GAME_SESSION.ID }, true);
    public static final ForeignKey<SessionRoleRecord, RoleRecord> FK_SESSIONROLE_ROLE1 = Internal.createForeignKey(SessionRole.SESSION_ROLE, DSL.name("fk_sessionrole_role1"), new TableField[] { SessionRole.SESSION_ROLE.ROLE_ID }, Keys.KEY_ROLE_PRIMARY, new TableField[] { Role.ROLE.ID }, true);
    public static final ForeignKey<SessionRoleRecord, UserRecord> FK_SESSIONROLE_USER1 = Internal.createForeignKey(SessionRole.SESSION_ROLE, DSL.name("fk_sessionrole_user1"), new TableField[] { SessionRole.SESSION_ROLE.USER_ID }, Keys.KEY_USER_PRIMARY, new TableField[] { User.USER.ID }, true);
    public static final ForeignKey<UserRecord, OrganizationRecord> FK_USER_ORGANIZATION1 = Internal.createForeignKey(User.USER, DSL.name("fk_user_organization1"), new TableField[] { User.USER.ORGANIZATION_ID }, Keys.KEY_ORGANIZATION_PRIMARY, new TableField[] { Organization.ORGANIZATION.ID }, true);
    public static final ForeignKey<UserRecord, RoleRecord> FK_USER_ROLE1 = Internal.createForeignKey(User.USER, DSL.name("fk_user_role1"), new TableField[] { User.USER.ROLE_ID }, Keys.KEY_ROLE_PRIMARY, new TableField[] { Role.ROLE.ID }, true);
}

/*
 * This file is generated by jOOQ.
 */
package nl.gamedata.data.tables.records;


import nl.gamedata.data.tables.GameRole;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GameRoleRecord extends UpdatableRecordImpl<GameRoleRecord> implements Record6<Integer, Byte, Byte, Byte, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>gamedata.game_role.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>gamedata.game_role.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>gamedata.game_role.view</code>.
     */
    public void setView(Byte value) {
        set(1, value);
    }

    /**
     * Getter for <code>gamedata.game_role.view</code>.
     */
    public Byte getView() {
        return (Byte) get(1);
    }

    /**
     * Setter for <code>gamedata.game_role.edit</code>.
     */
    public void setEdit(Byte value) {
        set(2, value);
    }

    /**
     * Getter for <code>gamedata.game_role.edit</code>.
     */
    public Byte getEdit() {
        return (Byte) get(2);
    }

    /**
     * Setter for <code>gamedata.game_role.admin</code>.
     */
    public void setAdmin(Byte value) {
        set(3, value);
    }

    /**
     * Getter for <code>gamedata.game_role.admin</code>.
     */
    public Byte getAdmin() {
        return (Byte) get(3);
    }

    /**
     * Setter for <code>gamedata.game_role.user_id</code>.
     */
    public void setUserId(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>gamedata.game_role.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>gamedata.game_role.game_id</code>.
     */
    public void setGameId(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>gamedata.game_role.game_id</code>.
     */
    public Integer getGameId() {
        return (Integer) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, Byte, Byte, Byte, Integer, Integer> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Integer, Byte, Byte, Byte, Integer, Integer> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return GameRole.GAME_ROLE.ID;
    }

    @Override
    public Field<Byte> field2() {
        return GameRole.GAME_ROLE.VIEW;
    }

    @Override
    public Field<Byte> field3() {
        return GameRole.GAME_ROLE.EDIT;
    }

    @Override
    public Field<Byte> field4() {
        return GameRole.GAME_ROLE.ADMIN;
    }

    @Override
    public Field<Integer> field5() {
        return GameRole.GAME_ROLE.USER_ID;
    }

    @Override
    public Field<Integer> field6() {
        return GameRole.GAME_ROLE.GAME_ID;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Byte component2() {
        return getView();
    }

    @Override
    public Byte component3() {
        return getEdit();
    }

    @Override
    public Byte component4() {
        return getAdmin();
    }

    @Override
    public Integer component5() {
        return getUserId();
    }

    @Override
    public Integer component6() {
        return getGameId();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Byte value2() {
        return getView();
    }

    @Override
    public Byte value3() {
        return getEdit();
    }

    @Override
    public Byte value4() {
        return getAdmin();
    }

    @Override
    public Integer value5() {
        return getUserId();
    }

    @Override
    public Integer value6() {
        return getGameId();
    }

    @Override
    public GameRoleRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public GameRoleRecord value2(Byte value) {
        setView(value);
        return this;
    }

    @Override
    public GameRoleRecord value3(Byte value) {
        setEdit(value);
        return this;
    }

    @Override
    public GameRoleRecord value4(Byte value) {
        setAdmin(value);
        return this;
    }

    @Override
    public GameRoleRecord value5(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public GameRoleRecord value6(Integer value) {
        setGameId(value);
        return this;
    }

    @Override
    public GameRoleRecord values(Integer value1, Byte value2, Byte value3, Byte value4, Integer value5, Integer value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached GameRoleRecord
     */
    public GameRoleRecord() {
        super(GameRole.GAME_ROLE);
    }

    /**
     * Create a detached, initialised GameRoleRecord
     */
    public GameRoleRecord(Integer id, Byte view, Byte edit, Byte admin, Integer userId, Integer gameId) {
        super(GameRole.GAME_ROLE);

        setId(id);
        setView(view);
        setEdit(edit);
        setAdmin(admin);
        setUserId(userId);
        setGameId(gameId);
        resetChangedOnNotNull();
    }
}

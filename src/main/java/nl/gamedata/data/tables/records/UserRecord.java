/*
 * This file is generated by jOOQ.
 */
package nl.gamedata.data.tables.records;


import nl.gamedata.data.tables.User;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRecord extends UpdatableRecordImpl<UserRecord> implements Record9<Integer, String, String, String, String, Integer, Byte, Byte, Byte> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>gamedata.user.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>gamedata.user.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>gamedata.user.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>gamedata.user.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>gamedata.user.email</code>.
     */
    public void setEmail(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>gamedata.user.email</code>.
     */
    public String getEmail() {
        return (String) get(2);
    }

    /**
     * Setter for <code>gamedata.user.password</code>.
     */
    public void setPassword(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>gamedata.user.password</code>.
     */
    public String getPassword() {
        return (String) get(3);
    }

    /**
     * Setter for <code>gamedata.user.salt</code>.
     */
    public void setSalt(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>gamedata.user.salt</code>.
     */
    public String getSalt() {
        return (String) get(4);
    }

    /**
     * Setter for <code>gamedata.user.organization_id</code>.
     */
    public void setOrganizationId(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>gamedata.user.organization_id</code>.
     */
    public Integer getOrganizationId() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>gamedata.user.super_admin</code>.
     */
    public void setSuperAdmin(Byte value) {
        set(6, value);
    }

    /**
     * Getter for <code>gamedata.user.super_admin</code>.
     */
    public Byte getSuperAdmin() {
        return (Byte) get(6);
    }

    /**
     * Setter for <code>gamedata.user.org_admin</code>.
     */
    public void setOrgAdmin(Byte value) {
        set(7, value);
    }

    /**
     * Getter for <code>gamedata.user.org_admin</code>.
     */
    public Byte getOrgAdmin() {
        return (Byte) get(7);
    }

    /**
     * Setter for <code>gamedata.user.game_admin</code>.
     */
    public void setGameAdmin(Byte value) {
        set(8, value);
    }

    /**
     * Getter for <code>gamedata.user.game_admin</code>.
     */
    public Byte getGameAdmin() {
        return (Byte) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Integer, String, String, String, String, Integer, Byte, Byte, Byte> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Integer, String, String, String, String, Integer, Byte, Byte, Byte> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return User.USER.ID;
    }

    @Override
    public Field<String> field2() {
        return User.USER.NAME;
    }

    @Override
    public Field<String> field3() {
        return User.USER.EMAIL;
    }

    @Override
    public Field<String> field4() {
        return User.USER.PASSWORD;
    }

    @Override
    public Field<String> field5() {
        return User.USER.SALT;
    }

    @Override
    public Field<Integer> field6() {
        return User.USER.ORGANIZATION_ID;
    }

    @Override
    public Field<Byte> field7() {
        return User.USER.SUPER_ADMIN;
    }

    @Override
    public Field<Byte> field8() {
        return User.USER.ORG_ADMIN;
    }

    @Override
    public Field<Byte> field9() {
        return User.USER.GAME_ADMIN;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getEmail();
    }

    @Override
    public String component4() {
        return getPassword();
    }

    @Override
    public String component5() {
        return getSalt();
    }

    @Override
    public Integer component6() {
        return getOrganizationId();
    }

    @Override
    public Byte component7() {
        return getSuperAdmin();
    }

    @Override
    public Byte component8() {
        return getOrgAdmin();
    }

    @Override
    public Byte component9() {
        return getGameAdmin();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getEmail();
    }

    @Override
    public String value4() {
        return getPassword();
    }

    @Override
    public String value5() {
        return getSalt();
    }

    @Override
    public Integer value6() {
        return getOrganizationId();
    }

    @Override
    public Byte value7() {
        return getSuperAdmin();
    }

    @Override
    public Byte value8() {
        return getOrgAdmin();
    }

    @Override
    public Byte value9() {
        return getGameAdmin();
    }

    @Override
    public UserRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public UserRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public UserRecord value3(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public UserRecord value4(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public UserRecord value5(String value) {
        setSalt(value);
        return this;
    }

    @Override
    public UserRecord value6(Integer value) {
        setOrganizationId(value);
        return this;
    }

    @Override
    public UserRecord value7(Byte value) {
        setSuperAdmin(value);
        return this;
    }

    @Override
    public UserRecord value8(Byte value) {
        setOrgAdmin(value);
        return this;
    }

    @Override
    public UserRecord value9(Byte value) {
        setGameAdmin(value);
        return this;
    }

    @Override
    public UserRecord values(Integer value1, String value2, String value3, String value4, String value5, Integer value6, Byte value7, Byte value8, Byte value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRecord
     */
    public UserRecord() {
        super(User.USER);
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(Integer id, String name, String email, String password, String salt, Integer organizationId, Byte superAdmin, Byte orgAdmin, Byte gameAdmin) {
        super(User.USER);

        setId(id);
        setName(name);
        setEmail(email);
        setPassword(password);
        setSalt(salt);
        setOrganizationId(organizationId);
        setSuperAdmin(superAdmin);
        setOrgAdmin(orgAdmin);
        setGameAdmin(gameAdmin);
        resetChangedOnNotNull();
    }
}

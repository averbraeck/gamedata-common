/*
 * This file is generated by jOOQ.
 */
package nl.gamedata.data.tables.records;


import nl.gamedata.data.tables.PropertyValue;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PropertyValueRecord extends UpdatableRecordImpl<PropertyValueRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>gamedata.property_value.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>gamedata.property_value.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>gamedata.property_value.value</code>.
     */
    public void setValue(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>gamedata.property_value.value</code>.
     */
    public String getValue() {
        return (String) get(1);
    }

    /**
     * Setter for <code>gamedata.property_value.element_property_id</code>.
     */
    public void setElementPropertyId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>gamedata.property_value.element_property_id</code>.
     */
    public Integer getElementPropertyId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>gamedata.property_value.template_element_id</code>.
     */
    public void setTemplateElementId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>gamedata.property_value.template_element_id</code>.
     */
    public Integer getTemplateElementId() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PropertyValueRecord
     */
    public PropertyValueRecord() {
        super(PropertyValue.PROPERTY_VALUE);
    }

    /**
     * Create a detached, initialised PropertyValueRecord
     */
    public PropertyValueRecord(Integer id, String value, Integer elementPropertyId, Integer templateElementId) {
        super(PropertyValue.PROPERTY_VALUE);

        setId(id);
        setValue(value);
        setElementPropertyId(elementPropertyId);
        setTemplateElementId(templateElementId);
        resetChangedOnNotNull();
    }
}

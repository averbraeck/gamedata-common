/*
 * This file is generated by jOOQ.
 */
package nl.gamedata.data.tables.records;


import java.time.LocalDateTime;

import nl.gamedata.data.tables.PlayerScore;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record14;
import org.jooq.Row14;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlayerScoreRecord extends UpdatableRecordImpl<PlayerScoreRecord> implements Record14<Integer, String, Double, Double, LocalDateTime, Integer, Byte, String, String, String, String, Integer, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>gamedata.player_score.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>gamedata.player_score.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>gamedata.player_score.score_type</code>.
     */
    public void setScoreType(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>gamedata.player_score.score_type</code>.
     */
    public String getScoreType() {
        return (String) get(1);
    }

    /**
     * Setter for <code>gamedata.player_score.delta</code>.
     */
    public void setDelta(Double value) {
        set(2, value);
    }

    /**
     * Getter for <code>gamedata.player_score.delta</code>.
     */
    public Double getDelta() {
        return (Double) get(2);
    }

    /**
     * Setter for <code>gamedata.player_score.new_score</code>.
     */
    public void setNewScore(Double value) {
        set(3, value);
    }

    /**
     * Getter for <code>gamedata.player_score.new_score</code>.
     */
    public Double getNewScore() {
        return (Double) get(3);
    }

    /**
     * Setter for <code>gamedata.player_score.timestamp</code>.
     */
    public void setTimestamp(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>gamedata.player_score.timestamp</code>.
     */
    public LocalDateTime getTimestamp() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>gamedata.player_score.mission_attempt</code>.
     */
    public void setMissionAttempt(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>gamedata.player_score.mission_attempt</code>.
     */
    public Integer getMissionAttempt() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>gamedata.player_score.final_score</code>.
     */
    public void setFinalScore(Byte value) {
        set(6, value);
    }

    /**
     * Getter for <code>gamedata.player_score.final_score</code>.
     */
    public Byte getFinalScore() {
        return (Byte) get(6);
    }

    /**
     * Setter for <code>gamedata.player_score.status</code>.
     */
    public void setStatus(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>gamedata.player_score.status</code>.
     */
    public String getStatus() {
        return (String) get(7);
    }

    /**
     * Setter for <code>gamedata.player_score.round</code>.
     */
    public void setRound(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>gamedata.player_score.round</code>.
     */
    public String getRound() {
        return (String) get(8);
    }

    /**
     * Setter for <code>gamedata.player_score.game_time</code>.
     */
    public void setGameTime(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>gamedata.player_score.game_time</code>.
     */
    public String getGameTime() {
        return (String) get(9);
    }

    /**
     * Setter for <code>gamedata.player_score.grouping_code</code>.
     */
    public void setGroupingCode(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>gamedata.player_score.grouping_code</code>.
     */
    public String getGroupingCode() {
        return (String) get(10);
    }

    /**
     * Setter for <code>gamedata.player_score.player_attempt_id</code>.
     */
    public void setPlayerAttemptId(Integer value) {
        set(11, value);
    }

    /**
     * Getter for <code>gamedata.player_score.player_attempt_id</code>.
     */
    public Integer getPlayerAttemptId() {
        return (Integer) get(11);
    }

    /**
     * Setter for <code>gamedata.player_score.player_objective_id</code>.
     */
    public void setPlayerObjectiveId(Integer value) {
        set(12, value);
    }

    /**
     * Getter for <code>gamedata.player_score.player_objective_id</code>.
     */
    public Integer getPlayerObjectiveId() {
        return (Integer) get(12);
    }

    /**
     * Setter for <code>gamedata.player_score.scale_id</code>.
     */
    public void setScaleId(Integer value) {
        set(13, value);
    }

    /**
     * Getter for <code>gamedata.player_score.scale_id</code>.
     */
    public Integer getScaleId() {
        return (Integer) get(13);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record14 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row14<Integer, String, Double, Double, LocalDateTime, Integer, Byte, String, String, String, String, Integer, Integer, Integer> fieldsRow() {
        return (Row14) super.fieldsRow();
    }

    @Override
    public Row14<Integer, String, Double, Double, LocalDateTime, Integer, Byte, String, String, String, String, Integer, Integer, Integer> valuesRow() {
        return (Row14) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return PlayerScore.PLAYER_SCORE.ID;
    }

    @Override
    public Field<String> field2() {
        return PlayerScore.PLAYER_SCORE.SCORE_TYPE;
    }

    @Override
    public Field<Double> field3() {
        return PlayerScore.PLAYER_SCORE.DELTA;
    }

    @Override
    public Field<Double> field4() {
        return PlayerScore.PLAYER_SCORE.NEW_SCORE;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return PlayerScore.PLAYER_SCORE.TIMESTAMP;
    }

    @Override
    public Field<Integer> field6() {
        return PlayerScore.PLAYER_SCORE.MISSION_ATTEMPT;
    }

    @Override
    public Field<Byte> field7() {
        return PlayerScore.PLAYER_SCORE.FINAL_SCORE;
    }

    @Override
    public Field<String> field8() {
        return PlayerScore.PLAYER_SCORE.STATUS;
    }

    @Override
    public Field<String> field9() {
        return PlayerScore.PLAYER_SCORE.ROUND;
    }

    @Override
    public Field<String> field10() {
        return PlayerScore.PLAYER_SCORE.GAME_TIME;
    }

    @Override
    public Field<String> field11() {
        return PlayerScore.PLAYER_SCORE.GROUPING_CODE;
    }

    @Override
    public Field<Integer> field12() {
        return PlayerScore.PLAYER_SCORE.PLAYER_ATTEMPT_ID;
    }

    @Override
    public Field<Integer> field13() {
        return PlayerScore.PLAYER_SCORE.PLAYER_OBJECTIVE_ID;
    }

    @Override
    public Field<Integer> field14() {
        return PlayerScore.PLAYER_SCORE.SCALE_ID;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getScoreType();
    }

    @Override
    public Double component3() {
        return getDelta();
    }

    @Override
    public Double component4() {
        return getNewScore();
    }

    @Override
    public LocalDateTime component5() {
        return getTimestamp();
    }

    @Override
    public Integer component6() {
        return getMissionAttempt();
    }

    @Override
    public Byte component7() {
        return getFinalScore();
    }

    @Override
    public String component8() {
        return getStatus();
    }

    @Override
    public String component9() {
        return getRound();
    }

    @Override
    public String component10() {
        return getGameTime();
    }

    @Override
    public String component11() {
        return getGroupingCode();
    }

    @Override
    public Integer component12() {
        return getPlayerAttemptId();
    }

    @Override
    public Integer component13() {
        return getPlayerObjectiveId();
    }

    @Override
    public Integer component14() {
        return getScaleId();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getScoreType();
    }

    @Override
    public Double value3() {
        return getDelta();
    }

    @Override
    public Double value4() {
        return getNewScore();
    }

    @Override
    public LocalDateTime value5() {
        return getTimestamp();
    }

    @Override
    public Integer value6() {
        return getMissionAttempt();
    }

    @Override
    public Byte value7() {
        return getFinalScore();
    }

    @Override
    public String value8() {
        return getStatus();
    }

    @Override
    public String value9() {
        return getRound();
    }

    @Override
    public String value10() {
        return getGameTime();
    }

    @Override
    public String value11() {
        return getGroupingCode();
    }

    @Override
    public Integer value12() {
        return getPlayerAttemptId();
    }

    @Override
    public Integer value13() {
        return getPlayerObjectiveId();
    }

    @Override
    public Integer value14() {
        return getScaleId();
    }

    @Override
    public PlayerScoreRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public PlayerScoreRecord value2(String value) {
        setScoreType(value);
        return this;
    }

    @Override
    public PlayerScoreRecord value3(Double value) {
        setDelta(value);
        return this;
    }

    @Override
    public PlayerScoreRecord value4(Double value) {
        setNewScore(value);
        return this;
    }

    @Override
    public PlayerScoreRecord value5(LocalDateTime value) {
        setTimestamp(value);
        return this;
    }

    @Override
    public PlayerScoreRecord value6(Integer value) {
        setMissionAttempt(value);
        return this;
    }

    @Override
    public PlayerScoreRecord value7(Byte value) {
        setFinalScore(value);
        return this;
    }

    @Override
    public PlayerScoreRecord value8(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public PlayerScoreRecord value9(String value) {
        setRound(value);
        return this;
    }

    @Override
    public PlayerScoreRecord value10(String value) {
        setGameTime(value);
        return this;
    }

    @Override
    public PlayerScoreRecord value11(String value) {
        setGroupingCode(value);
        return this;
    }

    @Override
    public PlayerScoreRecord value12(Integer value) {
        setPlayerAttemptId(value);
        return this;
    }

    @Override
    public PlayerScoreRecord value13(Integer value) {
        setPlayerObjectiveId(value);
        return this;
    }

    @Override
    public PlayerScoreRecord value14(Integer value) {
        setScaleId(value);
        return this;
    }

    @Override
    public PlayerScoreRecord values(Integer value1, String value2, Double value3, Double value4, LocalDateTime value5, Integer value6, Byte value7, String value8, String value9, String value10, String value11, Integer value12, Integer value13, Integer value14) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PlayerScoreRecord
     */
    public PlayerScoreRecord() {
        super(PlayerScore.PLAYER_SCORE);
    }

    /**
     * Create a detached, initialised PlayerScoreRecord
     */
    public PlayerScoreRecord(Integer id, String scoreType, Double delta, Double newScore, LocalDateTime timestamp, Integer missionAttempt, Byte finalScore, String status, String round, String gameTime, String groupingCode, Integer playerAttemptId, Integer playerObjectiveId, Integer scaleId) {
        super(PlayerScore.PLAYER_SCORE);

        setId(id);
        setScoreType(scoreType);
        setDelta(delta);
        setNewScore(newScore);
        setTimestamp(timestamp);
        setMissionAttempt(missionAttempt);
        setFinalScore(finalScore);
        setStatus(status);
        setRound(round);
        setGameTime(gameTime);
        setGroupingCode(groupingCode);
        setPlayerAttemptId(playerAttemptId);
        setPlayerObjectiveId(playerObjectiveId);
        setScaleId(scaleId);
        resetChangedOnNotNull();
    }
}

/*
 * This file is generated by jOOQ.
 */
package nl.gamedata.data.tables.records;


import java.time.LocalDateTime;

import nl.gamedata.data.tables.PlayerScore;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlayerScoreRecord extends UpdatableRecordImpl<PlayerScoreRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>gamedata.player_score.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>gamedata.player_score.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>gamedata.player_score.score_type</code>.
     */
    public void setScoreType(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>gamedata.player_score.score_type</code>.
     */
    public String getScoreType() {
        return (String) get(1);
    }

    /**
     * Setter for <code>gamedata.player_score.delta</code>.
     */
    public void setDelta(Double value) {
        set(2, value);
    }

    /**
     * Getter for <code>gamedata.player_score.delta</code>.
     */
    public Double getDelta() {
        return (Double) get(2);
    }

    /**
     * Setter for <code>gamedata.player_score.new_score_number</code>.
     */
    public void setNewScoreNumber(Double value) {
        set(3, value);
    }

    /**
     * Getter for <code>gamedata.player_score.new_score_number</code>.
     */
    public Double getNewScoreNumber() {
        return (Double) get(3);
    }

    /**
     * Setter for <code>gamedata.player_score.new_score_string</code>.
     */
    public void setNewScoreString(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>gamedata.player_score.new_score_string</code>.
     */
    public String getNewScoreString() {
        return (String) get(4);
    }

    /**
     * Setter for <code>gamedata.player_score.timestamp</code>.
     */
    public void setTimestamp(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>gamedata.player_score.timestamp</code>.
     */
    public LocalDateTime getTimestamp() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>gamedata.player_score.final_score</code>.
     */
    public void setFinalScore(Byte value) {
        set(6, value);
    }

    /**
     * Getter for <code>gamedata.player_score.final_score</code>.
     */
    public Byte getFinalScore() {
        return (Byte) get(6);
    }

    /**
     * Setter for <code>gamedata.player_score.status</code>.
     */
    public void setStatus(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>gamedata.player_score.status</code>.
     */
    public String getStatus() {
        return (String) get(7);
    }

    /**
     * Setter for <code>gamedata.player_score.round</code>.
     */
    public void setRound(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>gamedata.player_score.round</code>.
     */
    public String getRound() {
        return (String) get(8);
    }

    /**
     * Setter for <code>gamedata.player_score.game_time</code>.
     */
    public void setGameTime(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>gamedata.player_score.game_time</code>.
     */
    public String getGameTime() {
        return (String) get(9);
    }

    /**
     * Setter for <code>gamedata.player_score.grouping_code</code>.
     */
    public void setGroupingCode(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>gamedata.player_score.grouping_code</code>.
     */
    public String getGroupingCode() {
        return (String) get(10);
    }

    /**
     * Setter for <code>gamedata.player_score.player_attempt_id</code>.
     */
    public void setPlayerAttemptId(Integer value) {
        set(11, value);
    }

    /**
     * Getter for <code>gamedata.player_score.player_attempt_id</code>.
     */
    public Integer getPlayerAttemptId() {
        return (Integer) get(11);
    }

    /**
     * Setter for <code>gamedata.player_score.player_objective_id</code>.
     */
    public void setPlayerObjectiveId(Integer value) {
        set(12, value);
    }

    /**
     * Getter for <code>gamedata.player_score.player_objective_id</code>.
     */
    public Integer getPlayerObjectiveId() {
        return (Integer) get(12);
    }

    /**
     * Setter for <code>gamedata.player_score.scale_id</code>.
     */
    public void setScaleId(Integer value) {
        set(13, value);
    }

    /**
     * Getter for <code>gamedata.player_score.scale_id</code>.
     */
    public Integer getScaleId() {
        return (Integer) get(13);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PlayerScoreRecord
     */
    public PlayerScoreRecord() {
        super(PlayerScore.PLAYER_SCORE);
    }

    /**
     * Create a detached, initialised PlayerScoreRecord
     */
    public PlayerScoreRecord(Integer id, String scoreType, Double delta, Double newScoreNumber, String newScoreString, LocalDateTime timestamp, Byte finalScore, String status, String round, String gameTime, String groupingCode, Integer playerAttemptId, Integer playerObjectiveId, Integer scaleId) {
        super(PlayerScore.PLAYER_SCORE);

        setId(id);
        setScoreType(scoreType);
        setDelta(delta);
        setNewScoreNumber(newScoreNumber);
        setNewScoreString(newScoreString);
        setTimestamp(timestamp);
        setFinalScore(finalScore);
        setStatus(status);
        setRound(round);
        setGameTime(gameTime);
        setGroupingCode(groupingCode);
        setPlayerAttemptId(playerAttemptId);
        setPlayerObjectiveId(playerObjectiveId);
        setScaleId(scaleId);
        resetChangedOnNotNull();
    }
}

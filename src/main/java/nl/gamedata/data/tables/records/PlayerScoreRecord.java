/*
 * This file is generated by jOOQ.
 */
package nl.gamedata.data.tables.records;


import java.time.LocalDateTime;

import nl.gamedata.data.tables.PlayerScore;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record15;
import org.jooq.Row15;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlayerScoreRecord extends UpdatableRecordImpl<PlayerScoreRecord> implements Record15<Integer, String, Double, Double, String, LocalDateTime, Integer, Byte, String, String, String, String, Integer, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>gamedata.player_score.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>gamedata.player_score.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>gamedata.player_score.score_type</code>.
     */
    public void setScoreType(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>gamedata.player_score.score_type</code>.
     */
    public String getScoreType() {
        return (String) get(1);
    }

    /**
     * Setter for <code>gamedata.player_score.delta</code>.
     */
    public void setDelta(Double value) {
        set(2, value);
    }

    /**
     * Getter for <code>gamedata.player_score.delta</code>.
     */
    public Double getDelta() {
        return (Double) get(2);
    }

    /**
     * Setter for <code>gamedata.player_score.new_score_number</code>.
     */
    public void setNewScoreNumber(Double value) {
        set(3, value);
    }

    /**
     * Getter for <code>gamedata.player_score.new_score_number</code>.
     */
    public Double getNewScoreNumber() {
        return (Double) get(3);
    }

    /**
     * Setter for <code>gamedata.player_score.new_score_string</code>.
     */
    public void setNewScoreString(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>gamedata.player_score.new_score_string</code>.
     */
    public String getNewScoreString() {
        return (String) get(4);
    }

    /**
     * Setter for <code>gamedata.player_score.timestamp</code>.
     */
    public void setTimestamp(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>gamedata.player_score.timestamp</code>.
     */
    public LocalDateTime getTimestamp() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>gamedata.player_score.mission_attempt</code>.
     */
    public void setMissionAttempt(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>gamedata.player_score.mission_attempt</code>.
     */
    public Integer getMissionAttempt() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>gamedata.player_score.final_score</code>.
     */
    public void setFinalScore(Byte value) {
        set(7, value);
    }

    /**
     * Getter for <code>gamedata.player_score.final_score</code>.
     */
    public Byte getFinalScore() {
        return (Byte) get(7);
    }

    /**
     * Setter for <code>gamedata.player_score.status</code>.
     */
    public void setStatus(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>gamedata.player_score.status</code>.
     */
    public String getStatus() {
        return (String) get(8);
    }

    /**
     * Setter for <code>gamedata.player_score.round</code>.
     */
    public void setRound(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>gamedata.player_score.round</code>.
     */
    public String getRound() {
        return (String) get(9);
    }

    /**
     * Setter for <code>gamedata.player_score.game_time</code>.
     */
    public void setGameTime(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>gamedata.player_score.game_time</code>.
     */
    public String getGameTime() {
        return (String) get(10);
    }

    /**
     * Setter for <code>gamedata.player_score.grouping_code</code>.
     */
    public void setGroupingCode(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>gamedata.player_score.grouping_code</code>.
     */
    public String getGroupingCode() {
        return (String) get(11);
    }

    /**
     * Setter for <code>gamedata.player_score.player_attempt_id</code>.
     */
    public void setPlayerAttemptId(Integer value) {
        set(12, value);
    }

    /**
     * Getter for <code>gamedata.player_score.player_attempt_id</code>.
     */
    public Integer getPlayerAttemptId() {
        return (Integer) get(12);
    }

    /**
     * Setter for <code>gamedata.player_score.player_objective_id</code>.
     */
    public void setPlayerObjectiveId(Integer value) {
        set(13, value);
    }

    /**
     * Getter for <code>gamedata.player_score.player_objective_id</code>.
     */
    public Integer getPlayerObjectiveId() {
        return (Integer) get(13);
    }

    /**
     * Setter for <code>gamedata.player_score.scale_id</code>.
     */
    public void setScaleId(Integer value) {
        set(14, value);
    }

    /**
     * Getter for <code>gamedata.player_score.scale_id</code>.
     */
    public Integer getScaleId() {
        return (Integer) get(14);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record15 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row15<Integer, String, Double, Double, String, LocalDateTime, Integer, Byte, String, String, String, String, Integer, Integer, Integer> fieldsRow() {
        return (Row15) super.fieldsRow();
    }

    @Override
    public Row15<Integer, String, Double, Double, String, LocalDateTime, Integer, Byte, String, String, String, String, Integer, Integer, Integer> valuesRow() {
        return (Row15) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return PlayerScore.PLAYER_SCORE.ID;
    }

    @Override
    public Field<String> field2() {
        return PlayerScore.PLAYER_SCORE.SCORE_TYPE;
    }

    @Override
    public Field<Double> field3() {
        return PlayerScore.PLAYER_SCORE.DELTA;
    }

    @Override
    public Field<Double> field4() {
        return PlayerScore.PLAYER_SCORE.NEW_SCORE_NUMBER;
    }

    @Override
    public Field<String> field5() {
        return PlayerScore.PLAYER_SCORE.NEW_SCORE_STRING;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return PlayerScore.PLAYER_SCORE.TIMESTAMP;
    }

    @Override
    public Field<Integer> field7() {
        return PlayerScore.PLAYER_SCORE.MISSION_ATTEMPT;
    }

    @Override
    public Field<Byte> field8() {
        return PlayerScore.PLAYER_SCORE.FINAL_SCORE;
    }

    @Override
    public Field<String> field9() {
        return PlayerScore.PLAYER_SCORE.STATUS;
    }

    @Override
    public Field<String> field10() {
        return PlayerScore.PLAYER_SCORE.ROUND;
    }

    @Override
    public Field<String> field11() {
        return PlayerScore.PLAYER_SCORE.GAME_TIME;
    }

    @Override
    public Field<String> field12() {
        return PlayerScore.PLAYER_SCORE.GROUPING_CODE;
    }

    @Override
    public Field<Integer> field13() {
        return PlayerScore.PLAYER_SCORE.PLAYER_ATTEMPT_ID;
    }

    @Override
    public Field<Integer> field14() {
        return PlayerScore.PLAYER_SCORE.PLAYER_OBJECTIVE_ID;
    }

    @Override
    public Field<Integer> field15() {
        return PlayerScore.PLAYER_SCORE.SCALE_ID;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getScoreType();
    }

    @Override
    public Double component3() {
        return getDelta();
    }

    @Override
    public Double component4() {
        return getNewScoreNumber();
    }

    @Override
    public String component5() {
        return getNewScoreString();
    }

    @Override
    public LocalDateTime component6() {
        return getTimestamp();
    }

    @Override
    public Integer component7() {
        return getMissionAttempt();
    }

    @Override
    public Byte component8() {
        return getFinalScore();
    }

    @Override
    public String component9() {
        return getStatus();
    }

    @Override
    public String component10() {
        return getRound();
    }

    @Override
    public String component11() {
        return getGameTime();
    }

    @Override
    public String component12() {
        return getGroupingCode();
    }

    @Override
    public Integer component13() {
        return getPlayerAttemptId();
    }

    @Override
    public Integer component14() {
        return getPlayerObjectiveId();
    }

    @Override
    public Integer component15() {
        return getScaleId();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getScoreType();
    }

    @Override
    public Double value3() {
        return getDelta();
    }

    @Override
    public Double value4() {
        return getNewScoreNumber();
    }

    @Override
    public String value5() {
        return getNewScoreString();
    }

    @Override
    public LocalDateTime value6() {
        return getTimestamp();
    }

    @Override
    public Integer value7() {
        return getMissionAttempt();
    }

    @Override
    public Byte value8() {
        return getFinalScore();
    }

    @Override
    public String value9() {
        return getStatus();
    }

    @Override
    public String value10() {
        return getRound();
    }

    @Override
    public String value11() {
        return getGameTime();
    }

    @Override
    public String value12() {
        return getGroupingCode();
    }

    @Override
    public Integer value13() {
        return getPlayerAttemptId();
    }

    @Override
    public Integer value14() {
        return getPlayerObjectiveId();
    }

    @Override
    public Integer value15() {
        return getScaleId();
    }

    @Override
    public PlayerScoreRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public PlayerScoreRecord value2(String value) {
        setScoreType(value);
        return this;
    }

    @Override
    public PlayerScoreRecord value3(Double value) {
        setDelta(value);
        return this;
    }

    @Override
    public PlayerScoreRecord value4(Double value) {
        setNewScoreNumber(value);
        return this;
    }

    @Override
    public PlayerScoreRecord value5(String value) {
        setNewScoreString(value);
        return this;
    }

    @Override
    public PlayerScoreRecord value6(LocalDateTime value) {
        setTimestamp(value);
        return this;
    }

    @Override
    public PlayerScoreRecord value7(Integer value) {
        setMissionAttempt(value);
        return this;
    }

    @Override
    public PlayerScoreRecord value8(Byte value) {
        setFinalScore(value);
        return this;
    }

    @Override
    public PlayerScoreRecord value9(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public PlayerScoreRecord value10(String value) {
        setRound(value);
        return this;
    }

    @Override
    public PlayerScoreRecord value11(String value) {
        setGameTime(value);
        return this;
    }

    @Override
    public PlayerScoreRecord value12(String value) {
        setGroupingCode(value);
        return this;
    }

    @Override
    public PlayerScoreRecord value13(Integer value) {
        setPlayerAttemptId(value);
        return this;
    }

    @Override
    public PlayerScoreRecord value14(Integer value) {
        setPlayerObjectiveId(value);
        return this;
    }

    @Override
    public PlayerScoreRecord value15(Integer value) {
        setScaleId(value);
        return this;
    }

    @Override
    public PlayerScoreRecord values(Integer value1, String value2, Double value3, Double value4, String value5, LocalDateTime value6, Integer value7, Byte value8, String value9, String value10, String value11, String value12, Integer value13, Integer value14, Integer value15) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PlayerScoreRecord
     */
    public PlayerScoreRecord() {
        super(PlayerScore.PLAYER_SCORE);
    }

    /**
     * Create a detached, initialised PlayerScoreRecord
     */
    public PlayerScoreRecord(Integer id, String scoreType, Double delta, Double newScoreNumber, String newScoreString, LocalDateTime timestamp, Integer missionAttempt, Byte finalScore, String status, String round, String gameTime, String groupingCode, Integer playerAttemptId, Integer playerObjectiveId, Integer scaleId) {
        super(PlayerScore.PLAYER_SCORE);

        setId(id);
        setScoreType(scoreType);
        setDelta(delta);
        setNewScoreNumber(newScoreNumber);
        setNewScoreString(newScoreString);
        setTimestamp(timestamp);
        setMissionAttempt(missionAttempt);
        setFinalScore(finalScore);
        setStatus(status);
        setRound(round);
        setGameTime(gameTime);
        setGroupingCode(groupingCode);
        setPlayerAttemptId(playerAttemptId);
        setPlayerObjectiveId(playerObjectiveId);
        setScaleId(scaleId);
        resetChangedOnNotNull();
    }
}

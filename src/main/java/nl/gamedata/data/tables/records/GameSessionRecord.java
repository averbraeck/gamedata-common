/*
 * This file is generated by jOOQ.
 */
package nl.gamedata.data.tables.records;


import java.time.LocalDate;
import java.time.LocalDateTime;

import nl.gamedata.data.tables.GameSession;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GameSessionRecord extends UpdatableRecordImpl<GameSessionRecord> implements Record8<Integer, String, String, LocalDate, Byte, LocalDateTime, LocalDateTime, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>gamedata.game_session.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>gamedata.game_session.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>gamedata.game_session.code</code>.
     */
    public void setCode(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>gamedata.game_session.code</code>.
     */
    public String getCode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>gamedata.game_session.name</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>gamedata.game_session.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>gamedata.game_session.play_date</code>.
     */
    public void setPlayDate(LocalDate value) {
        set(3, value);
    }

    /**
     * Getter for <code>gamedata.game_session.play_date</code>.
     */
    public LocalDate getPlayDate() {
        return (LocalDate) get(3);
    }

    /**
     * Setter for <code>gamedata.game_session.valid</code>.
     */
    public void setValid(Byte value) {
        set(4, value);
    }

    /**
     * Getter for <code>gamedata.game_session.valid</code>.
     */
    public Byte getValid() {
        return (Byte) get(4);
    }

    /**
     * Setter for <code>gamedata.game_session.valid_from</code>.
     */
    public void setValidFrom(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>gamedata.game_session.valid_from</code>.
     */
    public LocalDateTime getValidFrom() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>gamedata.game_session.valid_until</code>.
     */
    public void setValidUntil(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>gamedata.game_session.valid_until</code>.
     */
    public LocalDateTime getValidUntil() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>gamedata.game_session.game_version_id</code>.
     */
    public void setGameVersionId(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>gamedata.game_session.game_version_id</code>.
     */
    public Integer getGameVersionId() {
        return (Integer) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, String, String, LocalDate, Byte, LocalDateTime, LocalDateTime, Integer> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Integer, String, String, LocalDate, Byte, LocalDateTime, LocalDateTime, Integer> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return GameSession.GAME_SESSION.ID;
    }

    @Override
    public Field<String> field2() {
        return GameSession.GAME_SESSION.CODE;
    }

    @Override
    public Field<String> field3() {
        return GameSession.GAME_SESSION.NAME;
    }

    @Override
    public Field<LocalDate> field4() {
        return GameSession.GAME_SESSION.PLAY_DATE;
    }

    @Override
    public Field<Byte> field5() {
        return GameSession.GAME_SESSION.VALID;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return GameSession.GAME_SESSION.VALID_FROM;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return GameSession.GAME_SESSION.VALID_UNTIL;
    }

    @Override
    public Field<Integer> field8() {
        return GameSession.GAME_SESSION.GAME_VERSION_ID;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getCode();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public LocalDate component4() {
        return getPlayDate();
    }

    @Override
    public Byte component5() {
        return getValid();
    }

    @Override
    public LocalDateTime component6() {
        return getValidFrom();
    }

    @Override
    public LocalDateTime component7() {
        return getValidUntil();
    }

    @Override
    public Integer component8() {
        return getGameVersionId();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getCode();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public LocalDate value4() {
        return getPlayDate();
    }

    @Override
    public Byte value5() {
        return getValid();
    }

    @Override
    public LocalDateTime value6() {
        return getValidFrom();
    }

    @Override
    public LocalDateTime value7() {
        return getValidUntil();
    }

    @Override
    public Integer value8() {
        return getGameVersionId();
    }

    @Override
    public GameSessionRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public GameSessionRecord value2(String value) {
        setCode(value);
        return this;
    }

    @Override
    public GameSessionRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public GameSessionRecord value4(LocalDate value) {
        setPlayDate(value);
        return this;
    }

    @Override
    public GameSessionRecord value5(Byte value) {
        setValid(value);
        return this;
    }

    @Override
    public GameSessionRecord value6(LocalDateTime value) {
        setValidFrom(value);
        return this;
    }

    @Override
    public GameSessionRecord value7(LocalDateTime value) {
        setValidUntil(value);
        return this;
    }

    @Override
    public GameSessionRecord value8(Integer value) {
        setGameVersionId(value);
        return this;
    }

    @Override
    public GameSessionRecord values(Integer value1, String value2, String value3, LocalDate value4, Byte value5, LocalDateTime value6, LocalDateTime value7, Integer value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached GameSessionRecord
     */
    public GameSessionRecord() {
        super(GameSession.GAME_SESSION);
    }

    /**
     * Create a detached, initialised GameSessionRecord
     */
    public GameSessionRecord(Integer id, String code, String name, LocalDate playDate, Byte valid, LocalDateTime validFrom, LocalDateTime validUntil, Integer gameVersionId) {
        super(GameSession.GAME_SESSION);

        setId(id);
        setCode(code);
        setName(name);
        setPlayDate(playDate);
        setValid(valid);
        setValidFrom(validFrom);
        setValidUntil(validUntil);
        setGameVersionId(gameVersionId);
        resetChangedOnNotNull();
    }
}

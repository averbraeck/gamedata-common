/*
 * This file is generated by jOOQ.
 */
package nl.gamedata.data.tables.records;


import nl.gamedata.data.tables.Dashboard;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DashboardRecord extends UpdatableRecordImpl<DashboardRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>gamedata.dashboard.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>gamedata.dashboard.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>gamedata.dashboard.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>gamedata.dashboard.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>gamedata.dashboard.description</code>.
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>gamedata.dashboard.description</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>gamedata.dashboard.query</code>.
     */
    public void setQuery(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>gamedata.dashboard.query</code>.
     */
    public String getQuery() {
        return (String) get(3);
    }

    /**
     * Setter for <code>gamedata.dashboard.dashboard_template_id</code>.
     */
    public void setDashboardTemplateId(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>gamedata.dashboard.dashboard_template_id</code>.
     */
    public Integer getDashboardTemplateId() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DashboardRecord
     */
    public DashboardRecord() {
        super(Dashboard.DASHBOARD);
    }

    /**
     * Create a detached, initialised DashboardRecord
     */
    public DashboardRecord(Integer id, String name, String description, String query, Integer dashboardTemplateId) {
        super(Dashboard.DASHBOARD);

        setId(id);
        setName(name);
        setDescription(description);
        setQuery(query);
        setDashboardTemplateId(dashboardTemplateId);
        resetChangedOnNotNull();
    }
}

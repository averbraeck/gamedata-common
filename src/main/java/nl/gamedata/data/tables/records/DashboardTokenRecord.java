/*
 * This file is generated by jOOQ.
 */
package nl.gamedata.data.tables.records;


import nl.gamedata.data.tables.DashboardToken;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DashboardTokenRecord extends UpdatableRecordImpl<DashboardTokenRecord> implements Record5<Integer, String, String, Byte, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>gamedata.dashboard_token.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>gamedata.dashboard_token.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>gamedata.dashboard_token.key</code>.
     */
    public void setKey(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>gamedata.dashboard_token.key</code>.
     */
    public String getKey() {
        return (String) get(1);
    }

    /**
     * Setter for <code>gamedata.dashboard_token.value</code>.
     */
    public void setValue(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>gamedata.dashboard_token.value</code>.
     */
    public String getValue() {
        return (String) get(2);
    }

    /**
     * Setter for <code>gamedata.dashboard_token.json</code>.
     */
    public void setJson(Byte value) {
        set(3, value);
    }

    /**
     * Getter for <code>gamedata.dashboard_token.json</code>.
     */
    public Byte getJson() {
        return (Byte) get(3);
    }

    /**
     * Setter for <code>gamedata.dashboard_token.dashboard_id</code>.
     */
    public void setDashboardId(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>gamedata.dashboard_token.dashboard_id</code>.
     */
    public Integer getDashboardId() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, String, Byte, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, String, String, Byte, Integer> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return DashboardToken.DASHBOARD_TOKEN.ID;
    }

    @Override
    public Field<String> field2() {
        return DashboardToken.DASHBOARD_TOKEN.KEY;
    }

    @Override
    public Field<String> field3() {
        return DashboardToken.DASHBOARD_TOKEN.VALUE;
    }

    @Override
    public Field<Byte> field4() {
        return DashboardToken.DASHBOARD_TOKEN.JSON;
    }

    @Override
    public Field<Integer> field5() {
        return DashboardToken.DASHBOARD_TOKEN.DASHBOARD_ID;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getKey();
    }

    @Override
    public String component3() {
        return getValue();
    }

    @Override
    public Byte component4() {
        return getJson();
    }

    @Override
    public Integer component5() {
        return getDashboardId();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getKey();
    }

    @Override
    public String value3() {
        return getValue();
    }

    @Override
    public Byte value4() {
        return getJson();
    }

    @Override
    public Integer value5() {
        return getDashboardId();
    }

    @Override
    public DashboardTokenRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public DashboardTokenRecord value2(String value) {
        setKey(value);
        return this;
    }

    @Override
    public DashboardTokenRecord value3(String value) {
        setValue(value);
        return this;
    }

    @Override
    public DashboardTokenRecord value4(Byte value) {
        setJson(value);
        return this;
    }

    @Override
    public DashboardTokenRecord value5(Integer value) {
        setDashboardId(value);
        return this;
    }

    @Override
    public DashboardTokenRecord values(Integer value1, String value2, String value3, Byte value4, Integer value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DashboardTokenRecord
     */
    public DashboardTokenRecord() {
        super(DashboardToken.DASHBOARD_TOKEN);
    }

    /**
     * Create a detached, initialised DashboardTokenRecord
     */
    public DashboardTokenRecord(Integer id, String key, String value, Byte json, Integer dashboardId) {
        super(DashboardToken.DASHBOARD_TOKEN);

        setId(id);
        setKey(key);
        setValue(value);
        setJson(json);
        setDashboardId(dashboardId);
        resetChangedOnNotNull();
    }
}
